{"version":3,"sources":["redux/actionCreator.js","components/CreateForm.js","components/ListItem.js","components/List.js","components/App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["getList","dispatch","axios","url","method","then","res","type","payload","data","catch","error","console","log","connect","getFullList","props","useState","taskNameInput","setTaskNameInput","taskDescriptionInput","setTaskDescriptionInput","addTaskDisabled","setAddTaskDisabled","useEffect","htmlFor","className","value","placeholder","onChange","e","target","length","disabled","onClick","name","description","preventDefault","deleteBtn","width","height","viewBox","fill","xmlns","d","fillRule","doneBtn","toDoBtn","editBtn","ListItem","editMode","setEditMode","item","editTaskTitle","setEditTaskTitle","editTaskDesc","setEditTaskDesc","taskEditSave","_id","done","id","statusChange","taskDelete","state","taskList","tasks","newTitle","newDesc","map","el","key","App","Boolean","window","location","hostname","match","initialState","task","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bfbcb325.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport function getList() {\n    return (dispatch) => {\n        axios({\n            url: 'https://to-do-app-trial.herokuapp.com/todo',\n            method: 'GET'\n        })\n            .then(res => {\n                dispatch({\n                    type: 'GET_LIST', payload: res.data\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n}","import React, {useEffect, useState} from 'react';\nimport '../App.css';\nimport {connect} from 'react-redux';\nimport {getList} from \"../redux/actionCreator\";\nimport axios from 'axios';\n\nfunction CreateForm(props) {\n    const [taskNameInput, setTaskNameInput] = useState('')\n    const [taskDescriptionInput, setTaskDescriptionInput] = useState('')\n    const [addTaskDisabled, setAddTaskDisabled] = useState(true);\n\n    const newTaskDescriptionInput = (e) => {\n        setTaskDescriptionInput(e.target.value);\n        (taskDescriptionInput.length > 2) ? setAddTaskDisabled(false) : setAddTaskDisabled(true);\n    }\n\n    useEffect(() => {\n        props.getFullList()\n    }, []);\n\n    const newTaskCreate = (name, description) => {\n        axios({\n            url: 'https://to-do-app-trial.herokuapp.com/todo',\n            method: 'POST',\n            data: {name, description},\n        })\n            .then(res => {\n                props.getFullList()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    const onTaskCreate = (e) => {\n        newTaskCreate(taskNameInput, taskDescriptionInput);\n        setTaskNameInput('');\n        setTaskDescriptionInput('')\n        e.preventDefault();\n        setAddTaskDisabled(true)\n    }\n\n\n    return (\n        <div>\n            <label htmlFor=\"exampleFormControlInput1\"><strong>Your To Do List</strong></label><br/>\n            <form>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={taskNameInput}\n                               placeholder=\"Enter Task Name\"\n                               onChange={e => setTaskNameInput(e.target.value)}/>\n                    </div>\n                    <div className=\"col\">\n                        <input type=\"text\" className=\"form-control form-control-sm\" value={taskDescriptionInput}\n                               placeholder=\"Enter Task Description\"\n                               onChange={newTaskDescriptionInput}/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <button disabled={addTaskDisabled} type=\"submit\" className=\"btn btn-info btn-sm\"\n                                onClick={onTaskCreate}>Add Task\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getFullList: () => dispatch(getList()),\n})\n\nexport default connect(null, mapDispatchToProps)(CreateForm);\n","import React, {useState} from 'react';\nimport '../App.css';\n\nconst deleteBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>);\n\nconst doneBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-check-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n</svg>);\n\nconst toDoBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n</svg>);\n\nconst editBtn = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>);\n\nfunction ListItem(props) {\n\n    const [editMode, setEditMode] = useState(false);\n    const [editTaskTitle, setEditTaskTitle] = useState(props.item.name);\n    const [editTaskDesc, setEditTaskDesc] = useState(props.item.description);\n\n    const onTaskEditSave = () => {\n        props.taskEditSave(props.item._id, editTaskTitle, editTaskDesc);\n        setEditMode(false);\n    }\n\n    return (\n        <div className=\"input-group\">\n            {editMode\n                ? <>\n                    <input type=\"text\" className=\"form-control form-control-sm\"\n                           value={editTaskTitle} onChange={(e) => setEditTaskTitle(e.target.value)}/>\n                    <input type=\"text\" className=\"form-control form-control-sm\"\n                           value={editTaskDesc} onChange={(e) => setEditTaskDesc(e.target.value)}/>\n                    <button className=\"btn btn-outline-success btn-sm\" onClick={onTaskEditSave}>Save</button>\n                    <button className=\"btn btn-outline-secondary btn-sm\" onClick={() => setEditMode(false)}>Cancel</button>\n                </>\n                :\n                <span className={props.item.done ? \"done form-control form-control-sm\" : \"form-control form-control-sm\"}>\n                   <strong>{props.item.name}:</strong>  {props.item.description}\n                </span>\n            }\n            <div className=\"input-group-append\" id=\"button-addon\">\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.statusChange(props.item._id, props.item.done)}>{props.item.done ? doneBtn : toDoBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\" onClick={() => setEditMode(true)}>{editBtn}</button>\n                <button className=\"btn btn-outline-secondary btn-sm\"\n                        onClick={() => props.taskDelete(props.item._id)}>{deleteBtn}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ListItem;\n","import React, {useEffect} from 'react';\nimport '../App.css';\nimport {connect} from 'react-redux';\nimport ListItem from \"./ListItem\";\nimport {getList} from \"../redux/actionCreator\";\nimport axios from 'axios';\n\nfunction List(props) {\n\n    useEffect(() => {\n        props.getFullList()\n    }, []);\n\n    const taskDelete = (id) => {\n        axios({\n            url: `https://to-do-app-trial.herokuapp.com/todo/${id}`,\n            method: 'DELETE',\n        })\n            .then(res => {\n                props.getFullList()\n            })\n            .catch(e => console.log(e))\n    };\n\n    const statusChange = (id, state) => {\n        axios({\n            url: `https://to-do-app-trial.herokuapp.com/todo/${id}`,\n            method: 'PUT',\n            data: {done: !state},\n        })\n            .then(res => {\n                props.getFullList()\n            })\n            .catch(e => console.log(e))\n    };\n\n    const taskEditSave = (id, newTitle, newDesc) => {\n        axios({\n            url: `https://to-do-app-trial.herokuapp.com/todo/${id}`,\n            method: 'PATCH',\n            data: {name: newTitle, description: newDesc}\n        })\n            .then(res => {\n                props.getFullList()\n            })\n            .catch(e => e.target.value)\n    }\n\n        return (\n            <div className=\"List\">\n                {props.taskList.map(el => <li key={el._id}>\n                    <ListItem item={el}\n                              taskDelete={taskDelete}\n                              statusChange={statusChange}\n                              taskEditSave={taskEditSave}/>\n                </li>)}\n            </div>\n        );\n    }\n\n    const mapStateToProps = (state) => ({\n        taskList: state.tasks,\n    })\n\n    const mapDispatchToProps = (dispatch) => ({\n        getFullList: () => dispatch(getList()),\n    })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\nimport '../App.css';\nimport CreateForm from \"./CreateForm\";\nimport List from \"./List\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <CreateForm/>\n      <p/>\n      <List/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    tasks: [\n        {_id: 1, name: 'Task-1', description: 'Desc-1', done: true},\n        {_id: 2, name: 'Task-2', description: 'Desc-2', done: false},\n        {_id: 3, name: 'Task-3', description: 'Desc-3', done: false},\n    ]\n}\n\nconst task = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'GET_LIST':\n            return {\n                ...state,\n                tasks: action.payload\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default task;","import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport task from './reducers';\nimport thunk from 'redux-thunk'\n\n\n\nconst store = createStore(task, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}